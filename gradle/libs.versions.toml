[versions]
kotlin = "2.1.20"
kotlinx-benchmark = "0.4.13"
kotlinx-serialization = "1.8.1"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.6.2"

kotlinter = "5.0.1"
detekt = "1.23.8"

spring = "3.4.4"
spring-dependency-management = "1.1.7"

protobuf-plugin = "0.9.4"
protobuf = "4.30.2"
grpc = "1.72.0"
grpc-kotlin = "1.4.1"

ktor = "3.1.2"

kotest = "5.9.1"
kotest-extension = "1.3.0"
mockk = "1.14.0"

google-genai = "0.4.0"
imageio = "3.12.0"
caffeine = "3.2.0"
scrimage = "4.3.0"
sentry = "8.8.0"
skrape = "1.2.2"
inmo-telegram = "24.0.2"
kotlin-aws-sdk = "1.4.64"
okhttp = "5.0.0-alpha.14"
jaffree = "2024.08.29"
logback = "1.5.18"

commons-codec = "1.18.0"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlinx-benchmark = { id = "org.jetbrains.kotlinx.benchmark", version.ref = "kotlinx-benchmark" }

kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

spring-boot = { id = "org.springframework.boot", version.ref = "spring" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin" }

[libraries]
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-benchmark-runtime = { module = "org.jetbrains.kotlinx:kotlinx-benchmark-runtime", version.ref = "kotlinx-benchmark" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }

ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

imageio-core = { module = "com.twelvemonkeys.imageio:imageio-core", version.ref = "imageio" }
imageio = { module = "com.twelvemonkeys.imageio:imageio", version.ref = "imageio" }
imageio-jpeg = { module = "com.twelvemonkeys.imageio:imageio-jpeg", version.ref = "imageio" }

sentry-spring = { module = "io.sentry:sentry-spring-boot-starter-jakarta", version.ref = "sentry" }
sentry-logback = { module = "io.sentry:sentry-logback", version.ref = "sentry" }

caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
scrimage-core = { module = "com.sksamuel.scrimage:scrimage-core", version.ref = "scrimage" }
skrape-html = { module = "it.skrape:skrapeit-html-parser", version.ref = "skrape" }
inmo-telegram-core = { module = "dev.inmo:tgbotapi.core", version.ref = "inmo-telegram" }
inmo-telegram-utils = { module = "dev.inmo:tgbotapi.utils", version.ref = "inmo-telegram" }

spring-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-starter-data-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc" }
spring-starter-amqp = { module = "org.springframework.boot:spring-boot-starter-amqp" }
spring-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache" }

spring-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-postgresql = { module = "org.postgresql:postgresql" }
spring-postgresql-r2dbc = { module = "org.postgresql:r2dbc-postgresql" }
spring-rabbitmq-test = { module = "org.springframework.amqp:spring-rabbit-test" }

spring-kotlin-reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
spring-kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core" }
spring-kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }
spring-reactor-test = { module = "io.projectreactor:reactor-test" }

aws-s3 = { module = "aws.sdk.kotlin:s3", version.ref = "kotlin-aws-sdk" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

jaffree = { module = "com.github.kokorin.jaffree:jaffree", version.ref = "jaffree" }

logback = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }

kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-extension" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-netty-shaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }
grpc-protoc-java = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" }
grpc-protoc-kotlin = { module = "io.grpc:protoc-gen-grpc-kotlin", version.ref = "grpc-kotlin" }

google-genai = { module = "com.google.genai:google-genai", version.ref = "google-genai" }

[bundles]
ktor-client = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
]
spring = [
    "sentry-spring",
    "sentry-logback",
    "spring-starter",
    "kotlin-reflect",
    "kotlin-stdlib-jdk8"
]
spring-webflux = [
    "sentry-spring",
    "sentry-logback",
    "spring-starter-webflux",
    "kotlin-reflect",
    "spring-kotlin-reactor-extensions",
    "spring-kotlinx-coroutines-reactor",
]
telegram = ["inmo-telegram-core", "inmo-telegram-utils"]
s3 = ["aws-s3", "okhttp"]
imageio = ["imageio-core", "imageio", "imageio-jpeg"]
kotest-spring = ["kotest-junit5", "kotest-assertions-core", "kotest-property", "kotest-spring"]
