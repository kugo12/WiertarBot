# This file was generated using Kotlin DSL (.github/workflows/build.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'Build'
on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'
  workflow_dispatch: {}
concurrency:
  group: '${{ github.ref }}'
  cancel-in-progress: true
jobs:
  check_yaml_consistency:
    name: 'Check YAML consistency'
    runs-on: 'ubuntu-latest'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v3'
    - id: 'step-1'
      name: 'Execute script'
      run: 'rm ''.github/workflows/build.yaml'' && ''.github/workflows/build.main.kts'''
    - id: 'step-2'
      name: 'Consistency check'
      run: 'git diff --exit-code ''.github/workflows/build.yaml'''
  gradle-build:
    runs-on: 'ubuntu-latest'
    needs:
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v3'
    - id: 'step-1'
      name: 'Set up jdk'
      uses: 'actions/setup-java@v3'
      with:
        java-version: '17'
        distribution: 'temurin'
    - id: 'step-2'
      name: 'Gradle build'
      uses: 'gradle/gradle-build-action@v2'
      with:
        arguments: 'assemble'
    - id: 'step-3'
      name: 'Upload build artifacts'
      uses: 'actions/upload-artifact@v3'
      with:
        name: 'jars'
        path: '**/build/libs'
  gradle-test:
    runs-on: 'ubuntu-latest'
    needs:
    - 'gradle-build'
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v3'
    - id: 'step-1'
      name: 'Set up jdk'
      uses: 'actions/setup-java@v3'
      with:
        java-version: '17'
        distribution: 'temurin'
    - id: 'step-2'
      name: 'Gradle test'
      uses: 'gradle/gradle-build-action@v2'
      with:
        arguments: 'test'
    - id: 'step-3'
      name: 'Upload test artifacts'
      uses: 'actions/upload-artifact@v3'
      with:
        name: 'test-results'
        path: |-
          **/build/test-results
          **/build/reports
  docker-core:
    runs-on: 'ubuntu-latest'
    needs:
    - 'gradle-build'
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v3'
    - id: 'step-1'
      name: 'Setup docker buildx'
      uses: 'docker/setup-buildx-action@v2'
    - id: 'step-2'
      name: 'Login to docker registry'
      uses: 'docker/login-action@v2'
      with:
        username: '${{ secrets.DOCKER_USERNAME }}'
        password: '${{ secrets.DOCKER_PASSWORD }}'
      if: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
    - id: 'step-3'
      name: 'Download build artifacts'
      uses: 'actions/download-artifact@v3'
      with:
        name: 'jars'
    - id: 'step-4'
      name: 'Build docker image'
      uses: 'docker/build-push-action@v4'
      with:
        context: 'services/core'
        file: 'services/core/Dockerfile'
        platforms: 'linux/amd64'
        tags: |-
          ${{ secrets.DOCKERHUB_USER }}/wiertarbot:latest
          ${{ secrets.DOCKERHUB_USER }}/wiertarbot:ci-${{ github.run_id }}
        push: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
  docker-download-api:
    runs-on: 'ubuntu-latest'
    needs:
    - 'gradle-build'
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v3'
    - id: 'step-1'
      name: 'Setup QEMU'
      uses: 'docker/setup-qemu-action@v2'
    - id: 'step-2'
      name: 'Setup docker buildx'
      uses: 'docker/setup-buildx-action@v2'
    - id: 'step-3'
      name: 'Login to docker registry'
      uses: 'docker/login-action@v2'
      with:
        username: '${{ secrets.DOCKER_USERNAME }}'
        password: '${{ secrets.DOCKER_PASSWORD }}'
      if: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
    - id: 'step-4'
      name: 'Download build artifacts'
      uses: 'actions/download-artifact@v3'
      with:
        name: 'jars'
    - id: 'step-5'
      name: 'Build docker image'
      uses: 'docker/build-push-action@v4'
      with:
        context: 'services/download-api'
        file: 'services/download-api/Dockerfile'
        platforms: 'linux/amd64,linux/arm64'
        tags: |-
          ${{ secrets.DOCKERHUB_USER }}/wiertarbot-download-api:latest
          ${{ secrets.DOCKERHUB_USER }}/wiertarbot-download-api:ci-${{ github.run_id }}
        push: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
  docker-ttrs-api:
    runs-on: 'ubuntu-latest'
    needs:
    - 'gradle-build'
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v3'
    - id: 'step-1'
      name: 'Setup docker buildx'
      uses: 'docker/setup-buildx-action@v2'
    - id: 'step-2'
      name: 'Login to docker registry'
      uses: 'docker/login-action@v2'
      with:
        username: '${{ secrets.DOCKER_USERNAME }}'
        password: '${{ secrets.DOCKER_PASSWORD }}'
      if: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
    - id: 'step-3'
      name: 'Download build artifacts'
      uses: 'actions/download-artifact@v3'
      with:
        name: 'jars'
    - id: 'step-4'
      name: 'Build docker image'
      uses: 'docker/build-push-action@v4'
      with:
        context: 'services/ttrs-api'
        file: 'services/ttrs-api/Dockerfile'
        platforms: 'linux/amd64'
        tags: |-
          ${{ secrets.DOCKERHUB_USER }}/wiertarbot-ttrs-api:latest
          ${{ secrets.DOCKERHUB_USER }}/wiertarbot-ttrs-api:ci-${{ github.run_id }}
        push: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
  trigger-deployment:
    runs-on: 'ubuntu-latest'
    needs:
    - 'docker-core'
    - 'docker-download-api'
    - 'docker-ttrs-api'
    - 'check_yaml_consistency'
    if: '${{ github.ref_name == ''main'' && github.event_name == ''push'' }}'
    environment: 'production'
    steps:
    - id: 'step-0'
      name: 'Trigger deployment'
      run: |-
        curl -fX POST \
          -F "token=${{ secrets.GITLAB_WB_D_TOKEN }}" \
          -F ref=main \
          -F "variables[CI_SOURCE]=WiertarBot" \
          "${{ secrets.GITLAB_WB_D_URL }}" > /dev/null
