version: 2.1

executors:
  x86:
    machine: &machine
      image: ubuntu-2004:current
      docker_layer_caching: true
    resource_class: medium

  arm:
    machine: *machine
    resource_class: arm.large

  default:
    docker:
      - image: cimg/base:current


jobs:
  build_and_push:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>

    steps:
      - checkout
      - run:
          name: Docker login
          command: docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_TOKEN
      - run:
          name: Build and push
          command: docker buildx build --progress=plain --push -t $DOCKERHUB_USER/wiertarbot:$(uname -m)-${CIRCLE_SHA1} .

  create_manifest:
    executor: default
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Docker login
          command: docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_TOKEN
      - run:
          name: Create and push manifest
          command: |
            set -eu
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker manifest create $DOCKERHUB_USER/wiertarbot:latest \
                                   $DOCKERHUB_USER/wiertarbot:aarch64-${CIRCLE_SHA1} \
                                   $DOCKERHUB_USER/wiertarbot:x86_64-${CIRCLE_SHA1}
            docker manifest push $DOCKERHUB_USER/wiertarbot:latest

  trigger_deployment:
    executor: default
    steps:
      - run:
          name: Trigger deployment
          command: |
            curl -fX POST \
              -F token=$GITLAB_WB_D_TOKEN \
              -F ref=main \
              $GITLAB_WB_D_URL > /dev/null


workflows:
  default:
    when:
      equal: [ main, << pipeline.git.branch >> ]

    jobs:
      - build_and_push:
          context: [dockerhub]
          matrix:
            parameters:
              executor: [x86, arm]
      - create_manifest:
          context: [dockerhub]
          requires: [build_and_push]
      - trigger_deployment:
          context: [gitlab]
          requires: [create_manifest]
